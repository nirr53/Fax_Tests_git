package EMS_Tests;

import java.util.Arrays;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import org.openqa.selenium.*;import EMS_Tests.enumsClass.browserTypes;

/**
* ----------------
* This test tests the default placeholder values
* ----------------
* Tests:
* 	 - Enter Default placeholder values menu.
* 	 1. check all headers and values.
* 
* Results:
* 	 1. All searched headers and values should be detected.
* 
* @author Nir Klieman
* @version 1.00
*/

@RunWith(Parameterized.class)
public class Test26__default_placeholders_values {
	
  private WebDriver 	driver;
  private StringBuffer  verificationErrors = new StringBuffer();
  private browserTypes  usedBrowser;
  GlobalVars 			testVars;
  GlobalFuncs			testFuncs;
  
  // Default constructor for print the name of the used browser 
  public Test26__default_placeholders_values(browserTypes browser) {
	  
	  System.out.println("Browser - "  + browser);
	  this.usedBrowser = browser;
  }
  
  // Define each browser as a parameter
  @SuppressWarnings("rawtypes")
  @Parameters(name="{0}")
  public static Collection data() {
	  
	GlobalVars testVars2  = new GlobalVars();
    return Arrays.asList(testVars2.getBrowsers());
  }
  
  @BeforeClass
  public static void setting_SystemProperties() {
	  
	  System.out.println("System Properties seting Key value.");
  }  
  
  @Before
  public void setUp() throws Exception {
	  	
	testVars  = new GlobalVars();
    testFuncs = new GlobalFuncs(); 
    System.setProperty("webdriver.chrome.driver", testVars.getchromeDrvPath());
	System.setProperty("webdriver.ie.driver"    , testVars.getIeDrvPath());
	testFuncs.myDebugPrinting("Enter setUp(); usedbrowser - " + this.usedBrowser);
	driver = testFuncs.defineUsedBrowser(this.usedBrowser);
    // driver.manage().window().maximize();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void Default_placeholder_values_menu() throws Exception {
	  
	Log.startTestCase(this.getClass().getName());
	 
    // Step 1 - Check default placeholder values menu
	testFuncs.myDebugPrinting("Step 1 - Check default placeholder values menu");
	testFuncs.login(driver, testVars.getSysUsername(), testVars.getSysPassword(), testVars.getSysMainStr(), "https://", this.usedBrowser);
    driver.switchTo().defaultContent();
	testFuncs.enterMenu(driver, "Default_placeholder_values", "Default Placeholders Values");
  	testFuncs.myWait(1000);
    driver.switchTo().frame(1);
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[2]", "Placeholder");
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[3]", "Value");
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[4]", "Description");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[1]/td[2]/span", "%ITCS_ServerIP%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[1]/td[3]"      , testVars.getIp());
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[2]/td[2]/span" , "%ITCS_TimeZoneName%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[3]/td[2]/span" , "%ITCS_TimeZoneLocation%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[4]/td[2]/span" , "%ITCS_DayLightSwitch%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[5]/td[2]/span" , "%ITCS_MwiVmNumber%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[6]/td[2]/span" , "%ITCS_Version%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[7]/td[2]/span" , "%ITCS_Language%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[8]/td[2]/span" , "%ITCS_SRTP%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[9]/td[2]/span" , "%ITCS_IPPhoneUsername%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[10]/td[2]/span", "%ITCS_IPPhonePassword%");
	testFuncs.verifyStrByXpath(driver, "//*[@id='placeholders_body']/tr[11]/td[2]/span", "%ITCS_destination%");
  }
  
  @After
  public void tearDown() throws Exception {
	  
    driver.quit();
    System.clearProperty("webdriver.chrome.driver");
	System.clearProperty("webdriver.ie.driver");
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
    	
    	testFuncs.myFail(verificationErrorString);
    }
  }
}
