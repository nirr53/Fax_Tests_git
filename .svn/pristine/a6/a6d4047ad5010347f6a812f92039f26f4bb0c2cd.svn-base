package EMS_Tests;

import java.util.Arrays;
import java.util.Collection;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import org.openqa.selenium.*;

/**
* ----------------
* This test verify that the Default placeholder values menu appears on Operation and Monitoring users
* ----------------
* Tests:
* 	 1. Login via an Operation user from the three following types:
* 		- Operation user (one 'Operation' region and the rest are 'Monitoring').
* 		- Operation user (one 'Operation' region and the rest are 'NA').
* 		- Operation user (All regions are 'Operation').
* 	    * For each user verify that the Default placeholder values menu is displayed.
* 	 2. Login via a Monitoring user and verify that the Default placeholder values menu is displayed.
* 
* Results:
* 	 1-2. For each Operation or Monitoring user the Default placeholder values menu should be displayed.
* 
* @author Nir Klieman
* @version 1.00
*/

@RunWith(Parameterized.class)
public class Test52__Operation_Monitoring_Default_placeholder_values {
	
  private WebDriver 	driver;
  private StringBuffer  verificationErrors = new StringBuffer();
  private String        usedBrowser = "";
  GlobalVars 			testVars;
  GlobalFuncs			testFuncs;
  
  // Default constructor for print the name of the used browser 
  public Test52__Operation_Monitoring_Default_placeholder_values(String browser) {
	  
	  System.out.println("Browser - "  + browser);
	  this.usedBrowser = browser;
  }
  
  // Define each browser as a parameter
  @SuppressWarnings("rawtypes")
  @Parameters(name="{0}")
  public static Collection data() {
	  
	GlobalVars testVars2  = new GlobalVars();
    return Arrays.asList(testVars2.getBrowsers());
  }
  
  @BeforeClass
  public static void setting_SystemProperties() {
	  
	  System.out.println("System Properties seting Key value.");
  }  
  
  @Before
  public void setUp() throws Exception {
	  	
	testVars  = new GlobalVars();
    testFuncs = new GlobalFuncs(); 
    System.setProperty("webdriver.chrome.driver", testVars.getchromeDrvPath());
	System.setProperty("webdriver.ie.driver"    , testVars.getIeDrvPath());
	testFuncs.myDebugPrinting("Enter setUp(); usedbrowser - " + this.usedBrowser);
	driver = testFuncs.defineUsedBrowser(this.usedBrowser);
    // driver.manage().window().maximize();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void Operation_Monitoring_default_placeholders_values() throws Exception {
	 

	String usernames[]      = {testVars.getOpetUsername1(), testVars.getOpetUsername2(), testVars.getOpetUsername3()};
	String passwords[]      = {testVars.getOperPassword1(), testVars.getOperPassword2(), testVars.getOperPassword3()};
	String descriptions[]   = {"one region is Operation and the rest are Monitoring"  ,
			 				   "one region is Operation and the rest are Not Availible",
			 				   "all regions are Operation"};
	Log.startTestCase(this.getClass().getName());
	
	// Login via Operation users
	for (int i = 0 ; i < 3; i ++) {
		
		testFuncs.myDebugPrinting("Step 1." + String.valueOf(i + 1) + " - Tests on Operation user  - " + descriptions[i], testVars.logerVars.MAJOR);
		testFuncs.login(driver, usernames[i], passwords[i], testVars.getSysMainStr(), "https://", this.usedBrowser);
		driver.findElement(By.xpath("//*[@id='tree_tab']/tbody/tr[3]/td/div/ul/li[4]/a")).click();
		testFuncs.myWait(2000);
		String bodyText = driver.findElement(By.tagName("body")).getText();
		testFuncs.myAssertTrue("The Default place holders values menu is not displayed !!", bodyText.contains("Default Placeholders Values"));
		driver.findElement(By.xpath("//*[@id='tree_tab']/tbody/tr[3]/td/div/ul/li[4]/ul/li[2]/a")).click();
		testFuncs.myWait(2000);
		driver.switchTo().frame(1);
		testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[1]/h3"						  , "Default Placeholders Values");
		testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[2]", "Placeholder");
		testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[3]", "Value");
		testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[4]", "Description");
		pressLogOut(driver);
		
	}
	
	// Login via Monitoring user
	testFuncs.login(driver, testVars.getMonitUsername(), testVars.getMonitPassword(), testVars.getSysMainStr(), "https://", this.usedBrowser);
	driver.findElement(By.xpath("//*[@id='tree_tab']/tbody/tr[3]/td/div/ul/li[4]/a")).click();
	testFuncs.myWait(2000);
	String bodyText = driver.findElement(By.tagName("body")).getText();
	testFuncs.myAssertTrue("The Default place holders values menu is not displayed !!", bodyText.contains("Default Placeholders Values"));
	driver.findElement(By.xpath("//*[@id='tree_tab']/tbody/tr[3]/td/div/ul/li[4]/ul/li[2]/a")).click();
	testFuncs.myWait(2000);
	driver.switchTo().frame(1);
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[1]/h3"						  , "Default Placeholders Values");
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[2]", "Placeholder");
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[3]", "Value");
	testFuncs.verifyStrByXpath(driver, "//*[@id='ipp-panel']/div[2]/div/div/table/thead/tr/th[4]", "Description");
  }
  
  private void pressLogOut(WebDriver driver) {
	  
	  driver.switchTo().defaultContent();
	  driver.findElement(By.xpath("//*[@id='header1']/tbody/tr/td[2]/a[3]")).click();
	  testFuncs.myWait(2000);
	  testFuncs.myAssertTrue("Log off testFuncs.myFailes !! (" + driver.getTitle() + ")", driver.getTitle().equals(testVars.getMainPageStr()));
}

@After
  public void tearDown() throws Exception {
	  
    driver.quit();
    System.clearProperty("webdriver.chrome.driver");
	System.clearProperty("webdriver.ie.driver");
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
    	
    	testFuncs.myFail(verificationErrorString);
    }
  }
}
