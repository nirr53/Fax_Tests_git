package EMS_Tests;

import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import org.openqa.selenium.*;

/**
* ----------------
* This test tests an import of users with multiple languages
* ----------------
* Tests:
* 	 - Login and enter the Import users menu.
* 	 1. Import users with multiple languages.
* 	 2. Delete the imported users.
* 
* Results:
* 	 1. All the users should be imported successfully.
* 
* @author Nir Klieman
* @version 1.00
*/

@RunWith(Parameterized.class)
public class Test65__import_diffrent_langs_users {
	
  private WebDriver 	driver;
  private StringBuffer  verificationErrors = new StringBuffer();
  private String        usedBrowser = "";
  GlobalVars 			testVars;
  GlobalFuncs			testFuncs;
  
  // Default constructor for print the name of the used browser 
  public Test65__import_diffrent_langs_users(String browser) {
	  
	  System.out.println("Browser - "  + browser);
	  this.usedBrowser = browser;
  }
  
  // Define each browser as a parameter
  @SuppressWarnings("rawtypes")
  @Parameters(name="{0}")
  public static Collection data() {
	  
	GlobalVars testVars2  = new GlobalVars();
    return Arrays.asList(testVars2.getBrowsers());
  }
  
  @BeforeClass
  public static void setting_SystemProperties() {
	  
	  System.out.println("System Properties seting Key value.");
  }  
  
  @Before
  public void setUp() throws Exception {
	  	
	testVars  = new GlobalVars();
    testFuncs = new GlobalFuncs(); 
    System.setProperty("webdriver.chrome.driver", testVars.getchromeDrvPath());
	System.setProperty("webdriver.ie.driver"    , testVars.getIeDrvPath());
	testFuncs.myDebugPrinting("Enter setUp(); usedbrowser - " + this.usedBrowser);
	driver = testFuncs.defineUsedBrowser(this.usedBrowser);
    // driver.manage().window().maximize();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void Manage_multiple_users_import_non_english_users() throws Exception {
	 
	String usrNamePref = "lang__";
	String path        = testVars.getSrcFilesPath() + "\\" + testVars.getImportFile("65");
	int usersNumber    = testFuncs.readFileLines(path, true);
	Log.startTestCase(this.getClass().getName());
	
    // Step 1 - Enter the Import users menu and import users with several languages
	testFuncs.myDebugPrinting("Step 1 - Enter the Import users menu and import users");
	testFuncs.login(driver, testVars.getSysUsername(), testVars.getSysPassword(), testVars.getSysMainStr(), "https://", this.usedBrowser);
	testFuncs.enterMenu(driver, "Import_export", "Import Users and Devices information");
	driver.switchTo().frame(1);
	testFuncs.uploadFile(driver, path, usrNamePref, 1, usersNumber, "Added");
    String bodyText = driver.findElement(By.tagName("body")).getText();
    String langs[] = {"czech1"  , "czech2"  , "french1"   , "french2" ,
    				  "german"  , "spanish" , "portuguese", "russian1",
    				  "russian2", "japanese", "italian"   , "polish"};
    for (String lang : langs) {
    	
    	testFuncs.myDebugPrinting("Searched prefix <" + usrNamePref + lang + ">", testVars.logerVars.MINOR);
    	testFuncs.myAssertTrue("A user with prefix <" + lang + "> was not detected !!", bodyText.contains(usrNamePref + lang));
    }
  	testFuncs.myWait(1000);
  	
    // Step 2 - Delete users
  	testFuncs.myDebugPrinting("Step 2 - Delete users");
 	driver.switchTo().defaultContent();
    driver.findElement(By.xpath("//*[@id='tree_tab']/tbody/tr[3]/td/div/ul/li[3]/ul/li[2]/a")).click();
  	testFuncs.myWait(1000);
    driver.switchTo().frame(1);	
    testFuncs.verifyStrByXpath(driver, "//*[@id='title']", "Manage Multiple Users");  
    String strUsersNumber = String.valueOf(usersNumber);
    testFuncs.selectMultipleUsers(driver, usrNamePref, strUsersNumber);
    Map<String, String> map = new HashMap<String, String>();
    map.put("usersPrefix",  usrNamePref);
    map.put("usersNumber",  strUsersNumber); 
    map.put("startIdx"   ,  "1");
    map.put("srcUsername",  "Finished");
    map.put("action"	 ,  "Delete Users");
    testFuncs.setMultipleUsersAction(driver, map);
  }
  
  @After
  public void tearDown() throws Exception {
	  
    driver.quit();
    System.clearProperty("webdriver.chrome.driver");
	System.clearProperty("webdriver.ie.driver");
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
    	
    	testFuncs.myFail(verificationErrorString);
    }
  }
}
